//Author: Manos Papadakis

// This file was generated by compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rinternals.h>
#include <R.h>
#include "mn.h"

using namespace Rcpp;

//[[Rcpp::export]]
SEXP min_max(SEXP x,bool index=false){
  double *xx=REAL(x),*end=xx+LENGTH(x);
  double min,max,xxx;
  min=max=*xx;
  xx++;
  if(index){
    SEXP F = PROTECT(Rf_allocVector(INTSXP, 2));
    int *f=INTEGER(F),min_i,max_i;
    double *bg=xx;
    min_i=max_i=0;
    for(;xx!=end;++xx){
      xxx=*xx;
      if(xxx>max){
        max=xxx;
        max_i=xx-bg;
      }else if(xxx<min){
        min=xxx;
        min_i=xx-bg;
      }
    }
    *f=min_i;
    f[1]=max_i;
    UNPROTECT(1);
    return F;
  }
  SEXP F = PROTECT(Rf_allocVector(REALSXP, 2));
  double *f=REAL(F);
  for(;xx!=end;++xx){
    xxx=*xx;
    if(xxx>max)
      max=xxx;
    else if(xxx<min)
      min=xxx;
  }
  *f=min;
  f[1]=max;
  UNPROTECT(1);
  return F;
}

RcppExport SEXP Rfast_min_max(SEXP x,SEXP indexSEXP) {
BEGIN_RCPP
    RObject __result;
    RNGScope __rngScope;
    traits::input_parameter< bool >::type index(indexSEXP);
    __result = min_max(x,index);
    return __result;
END_RCPP
}
